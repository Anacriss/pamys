{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8090"
    }
  ],
  "host": "localhost:8090",
  "tags": [
    { "name": "auth-controller", "description": "Auth Controller" },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    { "name": "category-controller", "description": "Category Controller" },
    { "name": "client-controller", "description": "Client Controller" },
    { "name": "product-controller", "description": "Product Controller" },
    { "name": "public-controller", "description": "Public Controller" },
    { "name": "vendor-controller", "description": "Vendor Controller" }
  ],
  "paths": {
    "/api/auth/authenticate": {
      "post": {
        "tags": ["auth-controller"],
        "summary": "createToken",
        "operationId": "createTokenUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": { "$ref": "#/definitions/AuthenticationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AuthenticationResponse" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/category": {
      "post": {
        "tags": ["category-controller"],
        "summary": "Save a Category",
        "operationId": "saveUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "category",
            "description": "category",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["category-controller"],
        "summary": "Update a Category",
        "operationId": "updateUsingPUT",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "category",
            "description": "category",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/category/all": {
      "get": {
        "tags": ["category-controller"],
        "summary": "Get all supermarket category",
        "operationId": "getAllUsingGET",
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Category" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/category/{id}": {
      "get": {
        "tags": ["category-controller"],
        "summary": "Search a category with a ID",
        "operationId": "getByIdUsingGET",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the category",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Category" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "tags": ["category-controller"],
        "summary": "Delete a Category by ID",
        "operationId": "deleteUsingDELETE",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the category",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseEntity" }
          },
          "201": { "description": "OK" },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/client": {
      "post": {
        "tags": ["client-controller"],
        "summary": "Save a Client",
        "operationId": "saveUsingPOST_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": { "$ref": "#/definitions/Client" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Client" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["client-controller"],
        "summary": "Update a Client",
        "operationId": "updateUsingPUT_1",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": { "$ref": "#/definitions/Client" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Client" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/client/all": {
      "get": {
        "tags": ["client-controller"],
        "summary": "Get all clients",
        "operationId": "getAllUsingGET_1",
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Client" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/client/{id}": {
      "get": {
        "tags": ["client-controller"],
        "summary": "Search a client with a ID",
        "operationId": "getByIdUsingGET_1",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the client",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Client" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "tags": ["client-controller"],
        "summary": "Delete a Client by ID",
        "operationId": "deleteUsingDELETE_1",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the client",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseEntity" }
          },
          "201": { "description": "OK" },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/error": {
      "get": {
        "tags": ["basic-error-controller"],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "produces": ["text/html"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ModelAndView" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "head": {
        "tags": ["basic-error-controller"],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": ["application/json"],
        "produces": ["text/html"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ModelAndView" }
          },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      },
      "post": {
        "tags": ["basic-error-controller"],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": ["application/json"],
        "produces": ["text/html"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ModelAndView" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["basic-error-controller"],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": ["application/json"],
        "produces": ["text/html"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ModelAndView" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "tags": ["basic-error-controller"],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "produces": ["text/html"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ModelAndView" }
          },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      },
      "options": {
        "tags": ["basic-error-controller"],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": ["application/json"],
        "produces": ["text/html"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ModelAndView" }
          },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      },
      "patch": {
        "tags": ["basic-error-controller"],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": ["application/json"],
        "produces": ["text/html"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ModelAndView" }
          },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/product": {
      "post": {
        "tags": ["product-controller"],
        "summary": "Save a Product",
        "operationId": "saveUsingPOST_2",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["product-controller"],
        "summary": "Update a Product",
        "operationId": "updateUsingPUT_2",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/product/all": {
      "get": {
        "tags": ["product-controller"],
        "summary": "Get all supermarket products",
        "operationId": "getAllUsingGET_2",
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/product/search/{name}": {
      "get": {
        "tags": ["product-controller"],
        "summary": "Search a product with your name Company",
        "operationId": "getByNameUsingGET",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Product Name",
            "required": true,
            "type": "string",
            "x-example": "zapato"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/api/product/{id}": {
      "get": {
        "tags": ["product-controller"],
        "summary": "Search a product with a ID",
        "operationId": "getByIdUsingGET_2",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Product" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "tags": ["product-controller"],
        "summary": "Delete a Product by ID",
        "operationId": "deleteUsingDELETE_2",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseEntity" }
          },
          "201": { "description": "OK" },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/public/client": {
      "post": {
        "tags": ["public-controller"],
        "summary": "Save a Client",
        "operationId": "saveUsingPOST_3",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": { "$ref": "#/definitions/Client" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Client" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/public/product": {
      "get": {
        "tags": ["public-controller"],
        "summary": "Get all products",
        "operationId": "getAllUsingGET_3",
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Product" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/vendor": {
      "post": {
        "tags": ["vendor-controller"],
        "summary": "Save a Vendor",
        "operationId": "saveUsingPOST_4",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "vendor",
            "description": "vendor",
            "required": true,
            "schema": { "$ref": "#/definitions/Vendor" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Vendor" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "tags": ["vendor-controller"],
        "summary": "Update a Vendor",
        "operationId": "updateUsingPUT_3",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "vendor",
            "description": "vendor",
            "required": true,
            "schema": { "$ref": "#/definitions/Vendor" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Vendor" }
          },
          "201": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/vendor/all": {
      "get": {
        "tags": ["vendor-controller"],
        "summary": "Get all supermarket vendor",
        "operationId": "getAllUsingGET_4",
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Vendor" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/vendor/search/{company}": {
      "get": {
        "tags": ["vendor-controller"],
        "summary": "Search a vendor with your name Company",
        "operationId": "getByCompanyUsingGET",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "company",
            "in": "path",
            "description": "Name company of the vendor",
            "required": true,
            "type": "string",
            "x-example": "Bata"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Vendor" }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Vendor not found" }
        }
      }
    },
    "/api/vendor/{id}": {
      "get": {
        "tags": ["vendor-controller"],
        "summary": "Search a vendor with a ID",
        "operationId": "getByIdUsingGET_3",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the vendor",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Vendor" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "tags": ["vendor-controller"],
        "summary": "Delete a Vendor by ID",
        "operationId": "deleteUsingDELETE_3",
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the vendor",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseEntity" }
          },
          "201": { "description": "OK" },
          "204": { "description": "No Content" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    }
  },
  "definitions": {
    "AuthenticationRequest": {
      "type": "object",
      "properties": {
        "password": { "type": "string" },
        "username": { "type": "string" }
      },
      "title": "AuthenticationRequest"
    },
    "AuthenticationResponse": {
      "type": "object",
      "properties": {
        "jwt": { "type": "string" },
        "user": { "$ref": "#/definitions/Client" }
      },
      "title": "AuthenticationResponse"
    },
    "Category": {
      "type": "object",
      "properties": {
        "active": { "type": "integer", "format": "int32" },
        "description": { "type": "string" },
        "idCategory": { "type": "integer", "format": "int32" },
        "name": { "type": "string" }
      },
      "title": "Category"
    },
    "Client": {
      "type": "object",
      "properties": {
        "active": { "type": "integer", "format": "int32" },
        "address": { "type": "string" },
        "email": { "type": "string" },
        "firstName": { "type": "string" },
        "idClient": { "type": "integer", "format": "int32" },
        "idRol": { "type": "integer", "format": "int32" },
        "lastName": { "type": "string" },
        "password": { "type": "string" },
        "phone": { "type": "string" },
        "username": { "type": "string" }
      },
      "title": "Client"
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": { "type": "boolean" },
        "model": { "type": "object" },
        "modelMap": {
          "type": "object",
          "additionalProperties": { "type": "object" }
        },
        "reference": { "type": "boolean" },
        "status": {
          "type": "string",
          "enum": [
            "ACCEPTED",
            "ALREADY_REPORTED",
            "BAD_GATEWAY",
            "BAD_REQUEST",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "CHECKPOINT",
            "CONFLICT",
            "CONTINUE",
            "CREATED",
            "DESTINATION_LOCKED",
            "EXPECTATION_FAILED",
            "FAILED_DEPENDENCY",
            "FORBIDDEN",
            "FOUND",
            "GATEWAY_TIMEOUT",
            "GONE",
            "HTTP_VERSION_NOT_SUPPORTED",
            "IM_USED",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "INSUFFICIENT_STORAGE",
            "INTERNAL_SERVER_ERROR",
            "I_AM_A_TEAPOT",
            "LENGTH_REQUIRED",
            "LOCKED",
            "LOOP_DETECTED",
            "METHOD_FAILURE",
            "METHOD_NOT_ALLOWED",
            "MOVED_PERMANENTLY",
            "MOVED_TEMPORARILY",
            "MULTIPLE_CHOICES",
            "MULTI_STATUS",
            "NETWORK_AUTHENTICATION_REQUIRED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NOT_ACCEPTABLE",
            "NOT_EXTENDED",
            "NOT_FOUND",
            "NOT_IMPLEMENTED",
            "NOT_MODIFIED",
            "NO_CONTENT",
            "OK",
            "PARTIAL_CONTENT",
            "PAYLOAD_TOO_LARGE",
            "PAYMENT_REQUIRED",
            "PERMANENT_REDIRECT",
            "PRECONDITION_FAILED",
            "PRECONDITION_REQUIRED",
            "PROCESSING",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "REQUEST_ENTITY_TOO_LARGE",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "REQUEST_TIMEOUT",
            "REQUEST_URI_TOO_LONG",
            "RESET_CONTENT",
            "SEE_OTHER",
            "SERVICE_UNAVAILABLE",
            "SWITCHING_PROTOCOLS",
            "TEMPORARY_REDIRECT",
            "TOO_EARLY",
            "TOO_MANY_REQUESTS",
            "UNAUTHORIZED",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "UNPROCESSABLE_ENTITY",
            "UNSUPPORTED_MEDIA_TYPE",
            "UPGRADE_REQUIRED",
            "URI_TOO_LONG",
            "USE_PROXY",
            "VARIANT_ALSO_NEGOTIATES"
          ]
        },
        "view": { "$ref": "#/definitions/View" },
        "viewName": { "type": "string" }
      },
      "title": "ModelAndView"
    },
    "Product": {
      "type": "object",
      "properties": {
        "category": { "$ref": "#/definitions/Category" },
        "dateCreated": { "type": "string", "format": "date-time" },
        "description": { "type": "string" },
        "idCategory": { "type": "integer", "format": "int32" },
        "idProduct": { "type": "integer", "format": "int32" },
        "idVendor": { "type": "integer", "format": "int32" },
        "name": { "type": "string" },
        "price": { "type": "number", "format": "double" },
        "productsImages": {
          "type": "array",
          "items": { "$ref": "#/definitions/ProductImages" }
        },
        "salePrice": { "type": "number", "format": "double" },
        "stock": { "type": "integer", "format": "int32" },
        "thumbnailUrl": { "type": "string" },
        "vendor": { "$ref": "#/definitions/Vendor" }
      },
      "title": "Product"
    },
    "ProductImages": {
      "type": "object",
      "properties": {
        "idProduct": { "type": "integer", "format": "int32" },
        "idProductImages": { "type": "integer", "format": "int32" },
        "url": { "type": "string" }
      },
      "title": "ProductImages"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": { "type": "object" },
        "statusCode": {
          "type": "string",
          "enum": [
            "ACCEPTED",
            "ALREADY_REPORTED",
            "BAD_GATEWAY",
            "BAD_REQUEST",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "CHECKPOINT",
            "CONFLICT",
            "CONTINUE",
            "CREATED",
            "DESTINATION_LOCKED",
            "EXPECTATION_FAILED",
            "FAILED_DEPENDENCY",
            "FORBIDDEN",
            "FOUND",
            "GATEWAY_TIMEOUT",
            "GONE",
            "HTTP_VERSION_NOT_SUPPORTED",
            "IM_USED",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "INSUFFICIENT_STORAGE",
            "INTERNAL_SERVER_ERROR",
            "I_AM_A_TEAPOT",
            "LENGTH_REQUIRED",
            "LOCKED",
            "LOOP_DETECTED",
            "METHOD_FAILURE",
            "METHOD_NOT_ALLOWED",
            "MOVED_PERMANENTLY",
            "MOVED_TEMPORARILY",
            "MULTIPLE_CHOICES",
            "MULTI_STATUS",
            "NETWORK_AUTHENTICATION_REQUIRED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NOT_ACCEPTABLE",
            "NOT_EXTENDED",
            "NOT_FOUND",
            "NOT_IMPLEMENTED",
            "NOT_MODIFIED",
            "NO_CONTENT",
            "OK",
            "PARTIAL_CONTENT",
            "PAYLOAD_TOO_LARGE",
            "PAYMENT_REQUIRED",
            "PERMANENT_REDIRECT",
            "PRECONDITION_FAILED",
            "PRECONDITION_REQUIRED",
            "PROCESSING",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "REQUEST_ENTITY_TOO_LARGE",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "REQUEST_TIMEOUT",
            "REQUEST_URI_TOO_LONG",
            "RESET_CONTENT",
            "SEE_OTHER",
            "SERVICE_UNAVAILABLE",
            "SWITCHING_PROTOCOLS",
            "TEMPORARY_REDIRECT",
            "TOO_EARLY",
            "TOO_MANY_REQUESTS",
            "UNAUTHORIZED",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "UNPROCESSABLE_ENTITY",
            "UNSUPPORTED_MEDIA_TYPE",
            "UPGRADE_REQUIRED",
            "URI_TOO_LONG",
            "USE_PROXY",
            "VARIANT_ALSO_NEGOTIATES"
          ]
        },
        "statusCodeValue": { "type": "integer", "format": "int32" }
      },
      "title": "ResponseEntity"
    },
    "Vendor": {
      "type": "object",
      "properties": {
        "company": { "type": "string" },
        "description": { "type": "string" },
        "idVendor": { "type": "integer", "format": "int32" }
      },
      "title": "Vendor"
    },
    "View": {
      "type": "object",
      "properties": { "contentType": { "type": "string" } },
      "title": "View"
    }
  }
}
